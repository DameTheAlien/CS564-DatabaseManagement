-- Group 04
-- Damian Franco & Trey Sampson

CREATE TABLE OMI_CASE (
    CASE_NUMBER             INT NOT NULL PRIMARY KEY,
    DATE_OPENED             DATE NOT NULL,
    DATE_FOUND              DATE NOT NULL,
    PERSON_FNAME            VARCHAR(20),
    PERSON_MNAME            VARCHAR(20),
    PERSON_LNAME            VARCHAR(20),
    PERSON_DOB              DATE,
    PERSON_SSN              CHAR(9),
    PERSON_FEET             INT,
    PERSON_INCHES           INT,
    PERSON_SEX              VARCHAR(40),
    PERSON_ANCESTRY         VARCHAR(40),
    ADDRESS_NUMBER          INT,
    STREET_NAME             VARCHAR(40),
    ZIP_CODE                VARCHAR(40) NOT NULL,
    CITY                    VARCHAR(40) NOT NULL,
    COUNTY                  VARCHAR(40) NOT NULL,
    ENVIRONMENT             VARCHAR(40) NOT NULL,
    INDOORS                 NUMBER(1),
    OUTDOORS                NUMBER(1),
    RESOLVED                NUMBER(1) NOT NULL,
    PERSON_IDENTIFIED       NUMBER(1),
    ERA                     VARCHAR(20) NOT NULL,
    CLOTHES_FOUND           VARCHAR(40),
    BODY_ORIENTATION        VARCHAR(40) NOT NULL,
    OVERALL_DECOMPOSITION   INT NOT NULL,
    CHECK ( PERSON_DOB < DATE_FOUND ),
    CHECK ( PERSON_DOB < DATE_OPENED ),
    CHECK ( OVERALL_DECOMPOSITION >= 1 ),
    CHECK ( OVERALL_DECOMPOSITION <= 10 ),
    CHECK ( PERSON_INCHES >= 1),
    CHECK ( PERSON_INCHES <= 12)
);

CREATE TABLE BONE (
    BONE_ID         VARCHAR(10) NOT NULL PRIMARY KEY,
    CASE_NO         INT NOT NULL,
    MEASUREMENT     INT NOT NULL,
    UNIT            VARCHAR(10) NOT NULL,
    COLOR           VARCHAR(10) NOT NULL, 
    INTEGRITY       INT NOT NULL,
    DNA_SENT        NUMBER(1) NOT NULL,
    DNA_RESULT      VARCHAR(10),
    ISOTOPE_SENT    NUMBER(1) NOT NULL,
    SAMPLE_TYPE     VARCHAR(40),
    SAMPLE_RESULT   VARCHAR(40),
    CHECK ( MEASUREMENT >= 0 ),
    CHECK ( MEASUREMENT <= 9 ),
    CHECK ( INTEGRITY >= 1 ),
    CHECK ( INTEGRITY <= 10 ),
    FOREIGN KEY ( CASE_NO )
        REFERENCES OMI_CASE ( CASE_NUMBER )
);

CREATE TABLE METHODS (
    METHOD_NAME     VARCHAR(20) NOT NULL,
    METHOD_PAPER    VARCHAR(20) NOT NULL,
    METHOD_MEASURES VARCHAR(20) NOT NULL,
    PRIMARY KEY ( METHOD_NAME, METHOD_PAPER )
);

CREATE TABLE DAMAGE (
    BONE_ID     VARCHAR(10) NOT NULL PRIMARY KEY,
    SEVERITY    INT NOT NULL,
    CHECK ( SEVERITY >= 1 ),
    CHECK ( SEVERITY <= 10 ),
    FOREIGN KEY ( BONE_ID )
        REFERENCES BONE ( BONE_ID )
);

CREATE TABLE IMAGE (
    CASE_NUM    INT NOT NULL,
    IMAGE_NAME  VARCHAR(20) NOT NULL,
    BODY_AREA   VARCHAR(40) NOT NULL,
    IMAGE_TYPE  VARCHAR(20) NOT NULL,
    PRIMARY KEY ( CASE_NUM, IMAGE_NAME ),
    FOREIGN KEY ( CASE_NUM )
        REFERENCES OMI_CASE ( CASE_NUMBER )
);

CREATE TABLE APPLY_TO (
    BONE_ID        VARCHAR(10) NOT NULL,
    METHOD_NAME    VARCHAR(20) NOT NULL,
    METHOD_PAPER   VARCHAR(20) NOT NULL,
    MIN_AGE        INT,
    MAX_AGE        INT,
    AGE_CONFIDENCE INT,
    SEX_ESTIMATION VARCHAR(6),
    SEX_CONFIDENCE INT,
    MIN_FEET       INT,
    MAX_FEET       INT,
    MIN_INCHES     INT,
    MAX_INCHES     INT,
    BIOAFFINITY    VARCHAR(10),
    BIO_CONFIDENCE INT,
    APPLY_ANCESTRY VARCHAR(20),
    PRIMARY KEY ( BONE_ID, METHOD_NAME, METHOD_PAPER),
    FOREIGN KEY ( BONE_ID )
        REFERENCES BONE ( BONE_ID ),
    FOREIGN KEY ( METHOD_NAME, METHOD_PAPER )
        REFERENCES METHODS ( METHOD_NAME, METHOD_PAPER )
);

CREATE TABLE HEAD (
    BONE_ID         VARCHAR(10) NOT NULL PRIMARY KEY,
    HEAD_FEATURES   VARCHAR(40),
    FOREIGN KEY ( BONE_ID )
        REFERENCES BONE ( BONE_ID )
);

CREATE TABLE LIMB (
    BONE_ID         VARCHAR(10) NOT NULL PRIMARY KEY,
    LIMB_FEATURES   VARCHAR(40),
    FOREIGN KEY ( BONE_ID )
        REFERENCES BONE ( BONE_ID )
);

CREATE TABLE TORSO (
    BONE_ID          VARCHAR(10) NOT NULL PRIMARY KEY,
    TORSO_FEATURES   VARCHAR(40),
    FOREIGN KEY ( BONE_ID )
        REFERENCES BONE ( BONE_ID )
);

CREATE TABLE SKULL (
    BONE_ID          VARCHAR(10) NOT NULL PRIMARY KEY,
    SKULL_FEATURES   VARCHAR(40),
    FOREIGN KEY ( BONE_ID )
        REFERENCES HEAD ( BONE_ID )
);

CREATE TABLE TEETH (
    BONE_ID          VARCHAR(10) NOT NULL PRIMARY KEY,
    TEETH_FEATURES   VARCHAR(40),
    FOREIGN KEY ( BONE_ID )
        REFERENCES HEAD ( BONE_ID )
);

CREATE TABLE LEG (
    BONE_ID        VARCHAR(10) NOT NULL PRIMARY KEY,
    LEG_FEATURES   VARCHAR(40),
    FOREIGN KEY ( BONE_ID )
        REFERENCES LIMB ( BONE_ID )
);

CREATE TABLE ARM (
    BONE_ID        VARCHAR(10) NOT NULL PRIMARY KEY,
    ARM_FEATURES   VARCHAR(40),
    FOREIGN KEY ( BONE_ID )
        REFERENCES LIMB ( BONE_ID )
);

CREATE TABLE PELVIS (
    BONE_ID          VARCHAR(10) NOT NULL PRIMARY KEY,
    PELVIS_FEATURES  VARCHAR(40),
    FOREIGN KEY ( BONE_ID )
        REFERENCES TORSO ( BONE_ID )
);

CREATE TABLE SPINE (
    BONE_ID          VARCHAR(10) NOT NULL PRIMARY KEY,
    SPINE_FEATURES   VARCHAR(40),
    FOREIGN KEY ( BONE_ID )
        REFERENCES TORSO ( BONE_ID )
);

CREATE TABLE RIBS (
    BONE_ID          VARCHAR(10) NOT NULL PRIMARY KEY,
    RIBS_FEATURES    VARCHAR(40),
    FOREIGN KEY ( BONE_ID )
        REFERENCES TORSO ( BONE_ID )
);

CREATE TABLE FOOT (
    BONE_ID          VARCHAR(10) NOT NULL PRIMARY KEY,
    FOOT_FEATURES    VARCHAR(40),
    FOREIGN KEY ( BONE_ID )
        REFERENCES LEG ( BONE_ID )
);

CREATE TABLE CALF (
    BONE_ID          VARCHAR(10) NOT NULL PRIMARY KEY,
    CALF_FEATURES    VARCHAR(40),
    FOREIGN KEY ( BONE_ID )
        REFERENCES LEG ( BONE_ID )
);

CREATE TABLE THIGH (
    BONE_ID          VARCHAR(10) NOT NULL PRIMARY KEY,
    THIGH_FEATURES   VARCHAR(40),
    FOREIGN KEY ( BONE_ID )
        REFERENCES LEG ( BONE_ID )
);

CREATE TABLE HAND (
    BONE_ID          VARCHAR(10) NOT NULL PRIMARY KEY,
    HAND_FEATURES    VARCHAR(40),
    FOREIGN KEY ( BONE_ID )
        REFERENCES ARM ( BONE_ID )
);

CREATE TABLE FOREARM (
    BONE_ID             VARCHAR(10) NOT NULL PRIMARY KEY,
    FOREARM_FEATURES    VARCHAR(40),
    FOREIGN KEY ( BONE_ID )
        REFERENCES ARM ( BONE_ID )
);

CREATE TABLE UPPER_ARM (
    BONE_ID             VARCHAR(10) NOT NULL PRIMARY KEY,
    UPPER_ARM_FEATURES  VARCHAR(40),
    FOREIGN KEY ( BONE_ID )
        REFERENCES ARM ( BONE_ID )
);

CREATE TABLE PATHOLOGY (
    BONE_ID             VARCHAR(10) NOT NULL PRIMARY KEY,
    PATH_NAME           VARCHAR(20) NOT NULL,
    CHRONIC             VARCHAR(10),
    DISEASE_LENGTH      INT,
    FOREIGN KEY ( BONE_ID )
        REFERENCES BONE ( BONE_ID )
);

CREATE TABLE TRAUMA (
    BONE_ID             VARCHAR(10) NOT NULL PRIMARY KEY,
    TRAUMA_TYPE         VARCHAR(20) NOT NULL,
    TRAUMA_TIME         VARCHAR(10),
    FOREIGN KEY ( BONE_ID )
        REFERENCES BONE ( BONE_ID )
);

CREATE TABLE DECOMPOSITION (
    BONE_ID             VARCHAR(10) NOT NULL PRIMARY KEY,
    DECOMP_TYPE         VARCHAR(20) NOT NULL,
    FOREIGN KEY ( BONE_ID )
        REFERENCES BONE ( BONE_ID )
);

CREATE TABLE RECOVERED (
    BONE_ID             VARCHAR(10) NOT NULL PRIMARY KEY,
    COMMENTS            VARCHAR(40) NOT NULL,
    FOREIGN KEY ( BONE_ID )
        REFERENCES BONE ( BONE_ID )
);

CREATE TABLE GENERIC (
    BONE_ID             VARCHAR(10) NOT NULL PRIMARY KEY,
    BELONGS_TO_ADULT    VARCHAR(20) NOT NULL,
    FOREIGN KEY ( BONE_ID )
        REFERENCES BONE ( BONE_ID )
);